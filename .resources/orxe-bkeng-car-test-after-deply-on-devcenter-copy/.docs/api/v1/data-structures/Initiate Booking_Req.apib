# Data Structures

## initiateBookCarRequest
+ include idempotencyTokenBookRQ
+ include itemsBookRQ
+ include customerBookRQ
+ include agentInfo
+ include purchaseIdInfo
+ include formOfPaymentBookRQ
+ include statebagBookRQ
+ include reportingFieldsBookRQ

## idempotencyTokenBookRQ
+ idempotencyToken: `123-456-789-test` (string, required) - Token ID that represents a unique booking request. You must assign a new token ID for every booking request.<br> Both the `idempotencyToken` and `cartId` field values are used to decide if the same booking request is reattempted.<br>Consider the following scenarios for the `idempotencyToken` field usage:
<b>Scenario 1:</b><br>
Consider a scenario where you want to check out a cart. You pass a new, unique value for the `idempotencyToken` field in the booking request. In this scenario, the request is considered as a new booking request and the API returns a new and unique `orderID`. 
<b>Scenario 2:</b><br>
Consider a scenario where you want to check out the same cart again and you pass the same `idempotencyToken` field value that was used in the earlier booking request. In this scenario, the booking request is considered as a duplicate, regardless of whether the booking request contains new booking field values or the same booking field values as of the previous booking request. The API returns the same `orderID` that was returned for the previous booking request and not a new `orderID`. If you want to reattempt the booking, you must provide a new and unique value for the `idempotencyToken` field for the same cart.

## itemsBookRQ
+ items (array [itemDetailsBookRQ], required, fixed-type) - Contains the list of the items in the cart_popup that you want to book.

## itemDetailsBookRQ
+ include itemIdBookRQ
+ include bookingInfoBookRQ
+ include statebagBookRQ

## itemIdBookRQ
+ id: `1e817cd6-85ba-451d-9553-dee99e04eeec` (string, required) - Unique ID for the item (car rental option) that you want to book. You must obtain this `id` from the `/items[]/id` field returned in the Get Price Using Cart API response.

## bookingInfoBookRQ
+ bookingInfo (bookingInfoBookDetailsRQ, required) - Contains information about the driver and the selected payment options for the car rental booking.

## bookingInfoBookDetailsRQ
+ include driverInfoBookRQ
+ include paymentOptionsBookRQ
+ include reportingFieldsBookRQ

## driverInfoBookRQ
+ driverInfo (driverInfoBookDetailsRQ, required) - Contains information about the person who will be driving the rental car. The driver may be the same person who is renting the car or a different person on whose behalf the car is booked.

## driverInfoBookDetailsRQ
+ name (nameDriverBookRQ, required) - Contains the name of the person who will be driving the car.
+ contactInfo (contactInfoDriverBookRQ, required) - Contains the contact information for the person who will be driving the car.
+ dob: `1989-12-25` (string, required) - Date of birth.<b>Format:</b> YYYY-MM-DD
+ include nationality

## nameDriverBookRQ
+ title (enum) - Title before the name. By default, the `title` field is set to `Mr`.
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx
+ first: `Jeff` (string, required) - First name.
+ middle: `Alex` - Middle name.
+ last: `Hawking` (string, required) - Last name.
+ suffix: `Jr` - Suffix that follows the name.

## contactInfoDriverBookRQ
+ address (addressDriverBookRQ) - Contains information about the address.
+ email: `jeff.hawking@abc.com` (string, required) - Email address that must be used when any email communication needs to be made with the driver.
+ phone (phoneDriverBookRQ) - Contains the contact number for the driver.

## addressDriverBookRQ
+ line1: `3077 Fifth Street` (string, required)- Street number and street name.
+ line2: `Landmark Beside the ACME Shopping Mall` - Additional information related to the address, such as landmark, apartment, suite, unit, and building information.
+ cityName: `San Francisco` (string, required) - Name of the city.
+ state (statewithcode) - Contains information about the state. Note that if the `countryCode` is set to `US`, `CA`, or `AU`, the `state` information is mandatory. For more information on state codes, see the [state code list](http://pe.usps.com/text/pub28/28apb.htm).
+ countryCode: `US` (string, required)- 2-character ISO code of the country. Read more about valid country codes.
+ postalCode: `94133` (string, required) - Postal code. In different countries, postal code is also known as postcode, post code, Eircode, PIN Code, or ZIP Code.

## phoneDriverBookRQ
+ type: `Mobile` (enum) - Type of phone number or contact number.
    + Fax
    + Home
    + Mobile
    + Work
    + Unknown
+ number: `(123)-555-0173` (string, required) - Phone number. The phone number can include the following characters: 0 to 9, plus sign +, minus sign -, and parenthesis ( ).<br>
<b>Notes:</b>
    + The phone number can include the area code, if applicable.
    + The phone number must not include the country code. You can provide the country code in the `countryCode` field.
    + The phone number must not include spaces.
+ countryCode: `1` - Country code for the phone number.

## nationality
+ nationality: `US` (string, required) - 2-character ISO code that indicates the nationality of the driver. Read more about valid nationality codes.

## paymentOptionsBookRQ
+ paymentOptions (array[paymentOptionsBookObjectRQ], required, fixed-type) - Contains the list of reward options that you want to avail to pay for the car rental.
<b>Notes:</b>
  + You must provide either the payment option returned within the `/items[]/paymentOptions` array in the Get Price Using Cart API response or one of the payment options returned within the `purchaseOption/rewards` array
in the Get Product Details API response.
  + In case of car rental, you can provide only one reward option within the `/paymentOptions` array.
  + Depending on the selected reward option, you must provide either the amount in cash, points, or a combination of both the amount in cash and points within the `/paymentOptions` array.

## paymentOptionsBookObjectRQ
+ rewardId: `j123123` (string, required) - Unique ID for the reward_popup that is availed to pay for the car rental.
+ cash (cashDetailsBookRS) - Contains information about the cash amount that the customer_popup must pay to book the car rental. If you provide the `cash` field, then you must provide the `amount` field and the `paymentMode` field in the request. You can obtain this information from the `/rewards[]/recommendation/cash` field returned within the `/carRentals[]/purchaseOption` object in the Get Car Search Results API response.<b>Format:</b> Decimal
+ points (pointsDetailsBookRQ) - Contains information about the number of points that the customer_popup must redeem to book the car rental. If you provide the `points` field, then you must provide the `value` field and the `unit` field in the request.

## cashDetailsBookRS
+ amount: 100 (number, required) - Cash component of the actual_fare_popup that the customer_popup must pay to book the car rental option.<b>Format:</b> Decimal
+ paymentMode: `Card` (enum, required) - Indicates the mode of payment for the `cash/amount`.<b>Notes:</b><br><ul style='list-style: disc'><li>If this field is set to `Card`, then you must provide the credit card information in the `/formOfPayment` object.</li><li>If this field is set to `Cash`, then you must not provide the `/formOfPayment` object.</li></ul>
    + Cash
    + Card

## pointsDetailsBookRQ
+ value: 2000 (number, required) - Number of points that the customer_popup must redeem to book the car rental option.
+ unit: `points` (string, required) - Indicates the currency that is associated with the loyalty_program_popup. For example, points and miles.

## customerBookRQ
+ customer (customerDetailsBookRQ, required) - Contains information about the customer who is making the booking. The customer is the user who is currently logged in while making the booking. This user can be an agent, the person who is renting the car, or another person who is doing the booking on behalf of the person who is renting the car.

## customerDetailsBookRQ
+ name (customerNameBookRQ, required) - Contains information about the name of the customer.
+ phone (phoneCustomerBookRQ, required) - Contains the contact number of the customer.
+ alternatePhone (phoneCustomerBookRQ) - Contains the alternate contact number of the customer.
+ address (addressContactBookRQ) - Contains information about the address.
+ email: `john.doe@abc.com` (string, required) - Email address that must be used when any email communication needs to be made with the customer.
+ include reportingFieldsBookRQ
+ include customerInfoId
+ include customerInfoAvailablePointBalance
+ transitCode: `72e87c86-c240-45eb-8d96-b46c52e56782` (string, required) - Unique code that is generated by the transit_service. The transit code is used to track all the calls made to different systems within cxLoyalty for all search to booking-related transactions for a single user session. The transit code is valid for `72 hours` from the time it is generated.

## customerNameBookRQ
+ title (enum) - Title before the name. By default, the `title` field is set to `Mr`.
  + Mr
  + Madam
  + Master
  + Miss
  + Mrs
  + Ms
  + Mx
+ first: `John` (string, required) - First name.
+ middle: `Alex` - Middle name.
+ last: `Doe` (string, required) - Last name.
+ suffix: `Jr` - Suffix that follows the name.

## customerContactInfoBookRQ
+ contactInfo (customerContactInfoDetailsBookRQ, required) - Contains the contact information for the customer.

## customerContactInfoDetailsBookRQ
+ address (addressContactBookRQ) - Contains information about the address.
+ email: `john.doe@abc.com` (string, required) - Email address that must be used when any email communication needs to be made with the customer.
+ phone (phoneCustomerBookRQ) - Contains the contact number for the customer_popup.


## addressContactBookRQ
+ line1: `3077 ACME Street` (string, required)- Street number and street name.
+ line2: `Landmark Beside the ACME Shopping Mall` - Additional information related to the address, such as landmark, apartment, suite, unit, and building information.
+ cityName: `San Francisco` (string, required) - Name of the city.
+ state (statewithcode) - Contains information about the state. Note that if the `countryCode` is set to `US`, `CA`, or `AU`, the `state` information is mandatory. For more information on state codes, see the [state code list](http://pe.usps.com/text/pub28/28apb.htm).
+ countryCode: `US` (string, required) - 2-character ISO code of the country. Read more about valid country codes.
+ postalCode: `94133` (string, required) - Postal code. In different countries, postal code is also known as postcode, post code, Eircode, PIN Code, or ZIP Code.

## phoneContactBookRQ
+ type: `Mobile` (enum) - Type of phone number or contact number. If you do not provide the phone `type`, this field is set to `Unknown`.
    + Fax
    + Home
    + Mobile
    + Work
    + Unknown
+ number: `(123)-555-0173` (string, required) - Phone number. The phone number can include the following characters: 0 to 9, plus sign +, minus sign -, and parenthesis ( ).<br>
<b>Notes:</b>
    + The phone number can include the area code, if applicable.
    + The phone number must not include the country code. You can provide the country code in the `countryCode` field.
    + The phone number must not include spaces.
+ countryCode: `1` - Country code for the phone number.

## phoneCustomerBookRQ
+ type: `Mobile` (enum) - Type of phone number or contact number. If you do not provide the phone `type`, this field is set to `Unknown`.
    + Fax
    + Home
    + Mobile
    + Work
    + Unknown
+ number: `(123)-555-0173` (string, required) - Phone number of the customer.<br>
<b>Notes:</b>
    + The phone number can include the area code, if applicable.
    + The phone number must not include the country code.
+ countryCode: `1` (string) - Country code for the phone number.

## formOfPaymentBookRQ
+ formOfPayment (formOfPaymentCardBookRQ) - Contains information about the credit card that is used to pay for the car rental booking. This credit card information is used to pay the `cash/amount` specified within the `paymentOptions` array.<br>
<b>Notes:</b>
  + If the `/cash/paymentMode` field within the `/items[]/bookingInfo/paymentOptions` array is set to `Card`, then you must provide the `/formOfPayment` object.
  + If the `/cash/paymentMode` field within the `/items[]/bookingInfo/paymentOptions` array is set to `Cash`, then you must not provide the `/formOfPayment` object.

## agentInfo
+ agent (agentInfoDetails, required) - Contains information about the agent_popup.

## agentInfoDetails
+ id: `agent1` (string, required) - Unique ID for the agent_popup.

## purchaseIdInfo
+ purchaseId: `123456` (string, required) - Unique ID for the booking. You must provide this ID to track all the booking-related transactions across different systems within cxLoyalty. The `purchaseId` is required when you contact the cxLoyalty Customer Service.

## formOfPaymentCardBookRQ
+ card (cardInfoBookRQ) - Contains information about the credit card that is used to make the payment for the booking.

## cardInfoBookRQ
+ number: `5555555555554444` (string, required) - Credit card number to be used for the payment. Note that the credit card number must be at least 12 digits.
+ holderName: `John Doe` (string, required) - Name on the credit card that is used for the payment.
+ cvv: `123` (string, required) - Three or four-digit card verification value (CVV) or card security code (CSC). Read more about CVV/CSC.
+ issuedBy: `VI` (enum, required) - Card issuer. See the list of card issuer codes and their descriptions. Note that the card issuer set in the `issuedBy` field must match with one of the allowed credit card issuers returned in the `/car/rate/allowedCreditCards` array in the Get Product Details API response.
  + VI
  + CA
  + AX
  + DS
  + TO
  + DC
  + S
  + JC
  + BC
  + T
  + R
  + E
+ expiry (expiryInfoBookRQ, required) - Contains the credit card expiration details. Note that the expiration month and year of the credit card must be later than or equal to the current month of the current year.
+ contactInfo (cardContactInfoBookRQ, required) - Contains the contact information for the cardholder. The contact information provided for the cardholder must be the same as the billing contact information that is on the record of the credit card issuing bank.

## expiryInfoBookRQ
+ month: 12 (number, required) - Expiration month of the credit card. Note that the value of `month` must be between `1` and `12`.
+ year: 2023 (number, required) - Expiration year of the credit card.

## cardContactInfoBookRQ
+ email: `john.doe@xyz.com` (string, required) - Email address (recipient ID) that must be used when any email communication needs to be made with the cardholder.
+ billingAddress (addressContactBookRQ, required) - Contains information about the billing address of the cardholder.
+ phone (phoneCustomerBookRQ, required) - Contains the contact number for the cardholder.

## statebagBookRQ
+ statebag (statebagListBookRQ) - For internal use only.

## statebagListBookRQ
+ key1: `value1` (string) - For internal use only.

## reportingFieldsBookRQ
+ reportingFields (reportingFieldsListBookRQ) - Contains the fields that can be used for any business-related purposes, such as to pass the booking token for reporting purpose. Note that you can only pass up to five custom fields.If you want to configure a custom field, then please contact cxLoyalty Business Team.

## reportingFieldsListBookRQ
+ field1: `Value1` - Indicates the value for custom field 1.
+ field2: `Value2` - Indicates the value for custom field 2.
+ field3: `Value3` - Indicates the value for custom field 3.
+ field4: `Value4` - Indicates the value for custom field 4.
+ field5: `Value5` - Indicates the value for custom field 5.
+ field6: `Value6` - Indicates the value for custom field 6.
+ field7: `Value7` - Indicates the value for custom field 7.
+ field8: `Value8` - Indicates the value for custom field 8.
+ field9: `Value9` - Indicates the value for custom field 9.
+ field10: `Value10` - Indicates the value for custom field 10.